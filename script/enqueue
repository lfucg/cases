#!/bin/bash
#
# Snarfed from Jordan Hollinger's enqueuer API tool
#
# Usage:
#
#   ./enqueue job [args]
#
script="${0%/*}"

# Create an HTTP Basic Auth format user/pass string from
# the Jobs API YAML config file
_enqueuer_extract_auth() {
  config="$script/../config/jobs_api.yml"
  [ -f "$config" ] || { echo "jobs_api.yml is missing"; exit 1; }
  awk 'NR == 1 { u = $2 }; NR == 2 { p = $2 }; END { print u ":" p }' "$config"
}

auth="$(_enqueuer_extract_auth)"
job="$1"; shift
host="http://localhost:3000"

# Build HTTP params
data=""
while (( "$#" )); do
  data="$data&arg[]=$1"
  shift 1
done

# Try to enqueue the job over the API
response_code=`curl "$host/jobs/enqueue/$job" --silent --write-out "%{http_code}" --output /dev/null -X POST --user "$auth" --data "$data"`

# Warn if it failed
if [[ "$response_code" != "200" ]]; then
  echo "Job submission failed! The response code while trying to enqueue $job was $response_code."
  exit 1
fi
